{"version":3,"sources":["modules/manager/table/assets/sand-bg.jpg","modules/maintenance/assets/inner-6.jpg","modules/about/components/assets/profile.jpg","modules/home/components/assets/carbon.svg","modules/designer/assets/clem-onojeghuo-DoA2duXyzRM-unsplash.jpg","modules/skeleton/assets/logo-dark.png","components/CookieNotification/CookieNotification.tsx","modules/routing/Page500.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/Loader/Loader.tsx","components/ScrollToTopOnNavigationChange/ScrollToTopOnNavigationChange.tsx","services/Analytics/GA.ts","components/TrackPageView/TrackPageView.tsx","modules/about/components/ProfilePicture.tsx","modules/about/About.tsx","modules/designer/components/DesignerTitle.tsx","modules/designer/components/NewMockFeatures.tsx","redux/mocks/slice.ts","services/MockyAPI/MockAPITransformer.ts","services/HTTP.ts","services/MockyAPI/MockyAPI.ts","modules/designer/form/models.ts","components/SelectCharset/models.ts","components/SelectCharset/SelectCharset.tsx","components/SelectContentType/models.ts","components/SelectContentType/SelectContentType.tsx","components/SelectExpirationTime/SelectExpirationTime.tsx","components/SelectHttpStatusCode/models.ts","components/SelectHttpStatusCode/SelectHttpStatusCode.tsx","components/TextareaCodeEditor/TextareaCodeEditor.tsx","components/TextareaHeaders/TextareaHeaders.tsx","modules/designer/form/CleanConfirmationOnSubmit.tsx","modules/designer/form/NewMockFormView.tsx","modules/designer/form/NewMockForm.tsx","modules/designer/Designer.tsx","modules/faq/Faq.tsx","modules/home/components/CallToActionDesignMock.tsx","modules/home/components/Features.tsx","modules/home/components/HeadTitle.tsx","modules/home/components/WhatIsMocky.tsx","modules/home/Home.tsx","modules/routing/Page404.tsx","modules/designer/components/Pub.tsx","modules/designer/NewMockConfirmation.tsx","modules/manager/components/ManagerTitle.tsx","modules/manager/components/MockGone.tsx","modules/manager/delete/DeleteSuccessful.tsx","modules/manager/components/DeleteMockInformation.tsx","modules/manager/components/SearchingMockLoader.tsx","modules/manager/delete/DeletionApproval.tsx","modules/manager/table/EmptyPlaceholder.tsx","modules/manager/table/ManagerTable.tsx","modules/manager/Manager.tsx","modules/policies/CookiePolicy.tsx","modules/skeleton/Footer.tsx","modules/skeleton/NavBar.tsx","modules/routing/Routing.tsx","redux/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","useCookie","cookieDefined","setCookie","role","className","to","type","onClick","icon","iconClose","size","ErrorBoundary","initialState","hasError","state","error","info","console","this","Page500","props","children","Component","color","width","height","pathname","useLocation","useEffect","window","scrollTo","initilized","GA","initialize","debug","trackingId","process","ReactGA","pageView","page","pageview","event","category","action","alt","src","profile","href","rel","target","last","undefined","all","mocksSlice","createSlice","name","reducers","store","payload","push","remove","filter","mock","id","clearNew","actions","selectLatestMock","mocks","selectAllMocks","selectCountMocks","length","MockyAPITransformer","formToApi","data","headers","JSON","parse","secret","Random","generate","content","body","status","content_type","contentType","charset","expiration","createdToStore","created","deleteLink","createdAt","Date","url","a","request","method","mode","fetch","response","json","stringify","HTTP","get","post","delete","URL","create","MockyAPI","check","validateJsonHeaders","exclusive","message","test","value","createError","Object","keys","every","x","match","values","e","newMockValidationSchema","Yup","required","max","trim","optional","ensure","charsetOptions","map","c","label","customStyles","input","provided","SelectCharset","field","setFieldValue","form","options","styles","find","option","onChange","contentTypesOptions","defaultValue","control","borderColor","SelectContentType","touched","errors","isClearable","placeholder","inputId","SelectExpirationTime","as","component","highlight","formatGroupLabel","formatOptionLabel","highlightClass","SelectHttpStatusCode","identity","login","permissions","roles","TextareaCodeEditor","minRows","maxRows","TextareaHeaders","classNameError","CleanConfirmationOnSubmit","dispatch","useDispatch","isValidating","useFormikContext","RequiredTag","OptionalTag","Label","ErrorFeedback","Help","NewMockFormView","isSubmitting","submitCount","isValid","disabled","mapDispatchToProps","withFormik","validationSchema","validateOnBlur","validateOnChange","mapPropsToValues","initialProps","handleSubmit","result","history","NewMockForm","withRouter","connect","DesignerTitle","NewMockFeatures","aria-label","data-gradient-bg","strings","typeSpeed","code","Home","HeadTitle","WhatIsMocky","CallToActionDesignMock","Features","coffee","style","marginTop","iconTwitter","iconCoffee","NewMockConfirmation","useState","copied","setCopied","useSelector","nbMocks","Pub","text","link","onCopy","iconCopy","data-tooltip","ManagerTitle","MockGone","format","withTitle","date","DeletionApproval","useParams","useHistory","deleting","setDeleting","deleted","setDeleted","selectMockById","useAsync","triggerDelete","loading","SearchingMockLoader","DeleteMockInformation","data-overlay","background","opacity","ManagerTable","wrap","cut","resume","substr","expireAt","openLink","iconOpen","iconDelete","editLink","iconEdit","key","Manager","isEmpty","EmptyPlaceholder","logo","maxHeight","Routing","ScrollToTopOnNavigationChange","TrackPageView","NavBar","fallback","Loader","exact","path","Designer","DeleteSuccessful","About","Faq","CookiePolicy","Page404","CookieNotification","Footer","configureStore","reducer","mocksReducer","middleware","save","preloadedState","load","Boolean","location","hostname","log","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.49cdbdb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sand-bg.dbaf856e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/inner-6.9534d24f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile.1955949d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carbon.784472b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/clem-onojeghuo-DoA2duXyzRM-unsplash.22faa923.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-dark.2d24ebf2.png\";","import './styles.css';\n\nimport React from 'react';\nimport { useCookie } from 'react-use';\n\nimport { faTimes as iconClose } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink } from 'react-router-dom';\n\nexport default () => {\n  const [cookieDefined, setCookie] = useCookie('cookie-banner');\n\n  return (\n    <>\n      {!cookieDefined && (\n        <div role=\"dialog\" className=\"cookie--block\">\n          <div className=\"cookie--body\">\n            <p className=\"cookie--description\">\n              By using our website you agree to our <NavLink to=\"/policies/cookies\">Cookie Policy</NavLink>\n            </p>\n          </div>\n\n          <div className=\"cookie--close\">\n            <button type=\"button\" onClick={() => setCookie('dismiss')}>\n              <FontAwesomeIcon icon={iconClose} size=\"lg\" />\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default () => (\n  <section className=\"height-100 bg--dark text-center\">\n    <div className=\"container pos-vertical-center\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <h1 className=\"h1--large\">500</h1>\n          <p className=\"lead\">An unexpected error has occured preventing the page from loading.</p>\n          <NavLink to=\"/\">Go back to home page</NavLink>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import React, { Component, ErrorInfo } from 'react';\nimport Page500 from '../../modules/routing/Page500';\n\ntype ErrorBoundaryState = {\n  hasError: Boolean;\n};\n\nclass ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n  private initialState: ErrorBoundaryState = {\n    hasError: false,\n  };\n\n  public state: ErrorBoundaryState = this.initialState;\n\n  public static getDerivedStateFromError(): ErrorBoundaryState {\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, info: ErrorInfo) {\n    console.error('ErrorBoundary caught an error', error, info);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return <Page500 />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { default as Loading } from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './styles.css';\n\nexport default () => (\n  <div className=\"loaderWrapper\">\n    <Loading type=\"ThreeDots\" color=\"#4a90e2\" width={50} height={30} />\n  </div>\n);\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n","import ReactGA from 'react-ga';\n\nvar initilized = false;\n\nconst initialize = (debug: boolean = false) => {\n  const trackingId = process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ID;\n\n  if (trackingId) {\n    initilized = true;\n    ReactGA.initialize(trackingId, { debug: debug });\n  }\n};\n\nconst pageView = (page: string) => {\n  if (!initilized) return;\n  ReactGA.pageview(page);\n};\n\nconst event = (category: string, action: string) => {\n  if (!initilized) return;\n  ReactGA.event({ category, action });\n};\n\nconst GA = {\n  initialize,\n  pageView,\n  event,\n};\n\nexport default GA;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport GA from '../../services/Analytics/GA';\n\nexport default () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    GA.pageView(pathname);\n  }, [pathname]);\n\n  return null;\n};\n","import './ProfilePicture.css';\n\nimport React from 'react';\n\nimport profile from './assets/profile.jpg';\n\nexport default () => (\n  <img alt=\"profile\" className=\"profilePicture-round-double profilePicture-shadow-leftBottom\" src={profile} />\n);\n","import React from 'react';\n\nimport ProfilePicture from './components/ProfilePicture';\n\nexport default () => (\n  <section className=\"switchable feature-large\">\n    <div className=\"container\">\n      <div className=\"row justify-content-between\">\n        <div className=\"col-md-6\">\n          <ProfilePicture />\n        </div>\n        <div className=\"col-md-6 col-lg-5\">\n          <div className=\"switchable__text\">\n            <div className=\"text-block\">\n              <h2>Julien Lafont</h2>\n              <span>\n                CTO&nbsp;\n                <a href=\"https://www.tabmo.io\" rel=\"noreferrer noopener\" target=\"_blank\">\n                  TabMo\n                </a>\n              </span>\n            </div>\n            <p className=\"lead\">Web alchemist and lazy Open Source contributor.</p>\n            <ul className=\"social-list list-inline list--hover\">\n              <li className=\"list-inline-item\">\n                <a href=\"https://twitter.com/julien_lafont\" rel=\"noreferrer noopener\" target=\"_blank\">\n                  <i className=\"socicon socicon-twitter icon icon--sm\"></i>\n                </a>\n              </li>\n              <li className=\"list-inline-item\">\n                <a href=\"https://www.linkedin.com/in/julienlafont/\" rel=\"noreferrer noopener\" target=\"_blank\">\n                  <i className=\"socicon socicon-linkedin icon icon--sm\"></i>\n                </a>\n              </li>\n              <li className=\"list-inline-item\">\n                <a href=\"https://www.github.com/julien-lafont/\" rel=\"noreferrer noopener\" target=\"_blank\">\n                  <i className=\"socicon socicon-github icon icon--sm\"></i>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import React from 'react';\n\nexport default () => (\n  <section className=\"text-center space--xxs\">\n    <div className=\"container\">\n      <h2>Design your mock</h2>\n    </div>\n  </section>\n);\n","import React from 'react';\n\nexport default () => (\n  <section className=\"space--xs\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 col-lg-3\">\n          <div className=\"feature feature-6\">\n            <h5>JSONP support</h5>\n            <p>\n              Add <code>?callback=myfunction</code> to your mocky URL to transform the response into a JSONP response.\n              <br />\n              <a\n                href=\"https://www.mocky.io/v2/5185415ba171ea3a00704eed?callback=execute\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                See in action\n              </a>\n            </p>\n          </div>\n        </div>\n\n        <div className=\"col-md-6 col-lg-3\">\n          <div className=\"feature feature-6\">\n            <h5>CORS</h5>\n            <p>\n              CORS Preflight requests are automatically accepted from any origin. You just have call the mock with an{' '}\n              <code>Origin</code> header.\n              <br />\n              <a\n                href=\"https://www.test-cors.org/#?client_method=POST&client_credentials=false&client_headers=X-FOO-BAR%0AX-Access-Token&client_postdata=%7B%22sample%22%3A%20%22data%22%7D&server_url=https%3A%2F%2Fwww.mocky.io%2Fv2%2F5185415ba171ea3a00704eed&server_enable=true&server_status=200&server_credentials=false&server_tabs=remote\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                See in action\n              </a>\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-3\">\n          <div className=\"feature feature-6\">\n            <h5>Arbitrary Delay</h5>\n            <p>\n              Add the <code>?mocky-delay=100ms</code> paramater to your mocky URL to delay the response. Maximum delay:\n              60s.\n              <br />\n              <a\n                href=\"https://www.mocky.io/v2/5185415ba171ea3a00704eed?mocky-delay=10s\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                See in action\n              </a>\n              <br />\n              <a\n                href=\"https://github.com/scala/scala/blob/v2.9.3/src/library/scala/concurrent/duration/Duration.scala#L76\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Allowed values\n              </a>\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-3\">\n          <div className=\"feature feature-6\">\n            <h5>Limitation</h5>\n            <p>\n              You're allowed to call your mocky up to 100 times per seconds. Call it at least once in the year to\n              postpone automatic deletion.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../store';\nimport { MockState, MockStored } from './types';\n\nconst initialState: MockState = {\n  last: undefined,\n  all: [],\n};\n\nexport const mocksSlice = createSlice({\n  name: 'mocks',\n  initialState,\n  reducers: {\n    store: (state, action: PayloadAction<MockStored>) => {\n      state.last = action.payload;\n      state.all.push(action.payload);\n    },\n    remove: (state, action: PayloadAction<string>) => {\n      state.all = state.all.filter((mock) => mock.id !== action.payload);\n    },\n    clearNew: (state) => {\n      state.last = undefined;\n    },\n  },\n});\n\nexport const { store, remove, clearNew } = mocksSlice.actions;\n\nexport const selectLatestMock = (state: RootState) => state.mocks.last;\nexport const selectAllMocks = (state: RootState) => state.mocks.all;\nexport const selectMockById = (id: string, secret: string) => (state: RootState) =>\n  state.mocks.all.find((mock) => mock.id === id && mock.secret === secret);\nexport const selectCountMocks = (state: RootState) => state.mocks.all.length;\n\nexport default mocksSlice.reducer;\n","import { NewMockFormValues } from '../../modules/designer/form/types';\nimport Random from 'randomstring';\nimport { MockCreated, MockCreateAPI } from './types';\nimport { MockStored } from '../../redux/mocks/types';\n\n/**\n * Transform Mock form data to the payload expected by the API\n */\nconst formToApi = (data: NewMockFormValues): MockCreateAPI => {\n  const headers = data.headers && data.headers !== '' ? JSON.parse(data.headers) : undefined;\n  const secret = data.secret && data.secret !== '' ? data.secret : Random.generate(36);\n  const content = data.body && data.body !== '' ? data.body : undefined;\n  const name = data.name && data.name !== '' ? data.name : undefined;\n\n  return {\n    status: data.status,\n    content: content,\n    content_type: data.contentType,\n    charset: data.charset,\n    secret: secret,\n    name: name,\n    expiration: data.expiration,\n    headers: headers,\n  };\n};\n\n/**\n * Construct from mock API response and mock API request the data to store in the local-storage\n * for future usage\n */\nconst createdToStore = (created: MockCreated, data: MockCreateAPI): MockStored => {\n  const { name, content_type, status, content, charset, headers } = data;\n\n  const deleteLink = `${process.env.REACT_APP_DOMAIN}/manage/delete/${created.id}/${created.secret}`;\n  const createdAt = new Date();\n\n  return { ...created, name, status, content, charset, headers, contentType: content_type, deleteLink, createdAt };\n};\n\nconst MockyAPITransformer = {\n  formToApi,\n  createdToStore,\n};\n\nexport default MockyAPITransformer;\n","interface HttpResponse<T> extends Response {\n  data?: T;\n}\n\nasync function get<T>(url: string): Promise<HttpResponse<T>> {\n  const request = {\n    method: 'GET',\n    mode: 'cors' as RequestMode,\n  };\n\n  const response: HttpResponse<T> = await fetch(url, request);\n  response.data = await response.json();\n  return response;\n}\n\nasync function post<T>(url: string, payload: any): Promise<HttpResponse<T>> {\n  const request = {\n    headers: { 'Content-Type': 'application/json' },\n    method: 'POST',\n    body: JSON.stringify(payload),\n    mode: 'cors' as RequestMode,\n  };\n\n  const response: HttpResponse<T> = await fetch(url, request);\n  response.data = await response.json();\n  return response;\n}\n\nasync function _delete(url: string, payload: any): Promise<Boolean> {\n  const request = {\n    headers: { 'Content-Type': 'application/json' },\n    method: 'DELETE',\n    body: JSON.stringify(payload),\n    mode: 'cors' as RequestMode,\n  };\n\n  const response = await fetch(url, request);\n  return response.status === 204;\n}\n\nconst HTTP = {\n  get: get,\n  post: post,\n  delete: _delete,\n};\n\nexport default HTTP;\n","import { NewMockFormValues } from '../../modules/designer/form/types';\nimport MockyAPITransformer from './MockAPITransformer';\nimport HTTP from '../HTTP';\nimport { MockCreated, DeleteMock } from './types';\nimport { MockStored } from '../../redux/mocks/types';\n\nconst URL = process.env.REACT_APP_API_URL + '/api/mock';\n\nconst create = async (data: NewMockFormValues): Promise<MockStored | undefined> => {\n  const payload = MockyAPITransformer.formToApi(data);\n  const response = await HTTP.post<MockCreated>(URL, payload);\n\n  if (!response.data) {\n    console.error(`API Response error: ${response.body}`);\n    return undefined;\n  } else {\n    return MockyAPITransformer.createdToStore(response.data, payload);\n  }\n};\n\nconst _delete = async (data: DeleteMock): Promise<Boolean> => {\n  return await HTTP.delete(`${URL}/${data.id}`, data);\n};\n\nconst check = async (data: DeleteMock): Promise<Boolean> => {\n  const response = await HTTP.post<Boolean>(`${URL}/${data.id}/check`, data);\n  return response.data ?? false;\n};\n\nconst MockyAPI = {\n  delete: _delete,\n  check,\n  create,\n};\n\nexport default MockyAPI;\n","import * as Yup from 'yup';\n\nimport { NewMockFormValues } from './types';\n\nexport const initialState: NewMockFormValues = {\n  status: 200,\n  charset: 'UTF-8',\n  contentType: 'application/json',\n  headers: '',\n  body: '',\n  secret: '',\n  name: '',\n  expiration: 'never',\n};\n\n// Check if the header field is a \"basic\" object with string key and string value\n// The key must be an alphanumric key\nconst validateJsonHeaders = {\n  name: 'isJsonHeaders',\n  exclusive: false,\n  /* eslint no-template-curly-in-string: 0 */\n  message: '${path} must be a valid JSON object',\n  test: function (this: Yup.TestContext, value: string) {\n    if (value === undefined) return true;\n    try {\n      const json = JSON.parse(value);\n      if (typeof json !== 'object') return this.createError({ message: 'Headers must be a JSON object' });\n      if (!Object.keys(json).every((x) => typeof x === 'string' && x.match(/^[a-zA-Z0-9-_]*$/)))\n        return this.createError({ message: 'Headers key must be simple string (allowed characters: a-z A-Z 0-9 _ -)' });\n      if (!Object.values(json).every((x) => typeof x === 'string'))\n        return this.createError({ message: 'Headers values must be a string' });\n      return true;\n    } catch (e) {\n      return this.createError({ message: 'Headers must be a JSON object' });\n    }\n  },\n};\n\nexport const newMockValidationSchema = Yup.object({\n  status: Yup.number().required('Please select the status code of your mock.'),\n  contentType: Yup.string().max(200).required('Please define the content-type of your mock.'),\n  charset: Yup.string().max(50).required('Please select the charset of your mock.'),\n  headers: Yup.string().trim().max(1000).test(validateJsonHeaders).optional(),\n  name: Yup.string().max(100).optional(),\n  body: Yup.string().trim().ensure().max(1000000).optional(),\n  secret: Yup.string().max(64).optional(),\n});\n","export const charsets = ['UTF-8', 'ISO-8859-1', 'UTF-16'];\n\nexport interface CharsetOption {\n  value: string;\n  label: string;\n}\n\nexport const charsetOptions: Array<CharsetOption> = charsets.map((c) => {\n  let obj: CharsetOption = {\n    label: c,\n    value: c,\n  };\n  return obj;\n});\n","import React from 'react';\nimport Select from 'react-select';\nimport { charsetOptions } from './models';\nimport { FieldProps } from 'formik';\n\nconst customStyles = {\n  input: (provided: any, state: any) => {\n    return { height: 'fit-content' };\n  },\n};\n\nconst SelectCharset = ({ field, form: { setFieldValue }, ...props }: FieldProps & { label: string }) => {\n  return (\n    <Select\n      options={charsetOptions}\n      styles={customStyles}\n      {...field}\n      {...props}\n      value={(charsetOptions ? charsetOptions.find((option) => option.value === field.value) : '') as any}\n      onChange={(option) => setFieldValue(field.name, (option as any).value)}\n    />\n  );\n};\n\nexport default SelectCharset;\n","export const contentTypes = [\n  'application/json',\n  'application/x-www-form-urlencoded',\n  'application/xhtml+xml',\n  'application/xml',\n  'multipart/form-data',\n  'text/css',\n  'text/csv',\n  'text/html',\n  'text/json',\n  'text/plain',\n  'text/xml',\n];\n\nexport interface ContentTypeOption {\n  value: string;\n  label: string;\n}\n\nexport const contentTypesOptions: Array<ContentTypeOption> = contentTypes.map((c) => {\n  let obj: ContentTypeOption = {\n    label: c,\n    value: c,\n  };\n  return obj;\n});\n\nexport const defaultValue = contentTypesOptions[0];\n","import React from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport { contentTypesOptions, defaultValue } from './models';\nimport { FieldProps } from 'formik';\n\nconst customStyles = (hasError: boolean) => ({\n  input: () => {\n    return { height: 'fit-content' };\n  },\n  control: (styles: any) => {\n    return {\n      ...styles,\n      borderColor: hasError ? '#dc3545' : styles.borderColor,\n      '&:hover': {\n        borderColor: hasError ? '#dc3545' : styles.borderColor,\n      },\n    };\n  },\n});\n\nconst SelectContentType = ({\n  field,\n  form: { touched, errors, setFieldValue },\n  ...props\n}: FieldProps & { label: string }) => {\n  let hasError = !!errors[field.name] && !!touched[field.name];\n\n  return (\n    <CreatableSelect\n      isClearable\n      placeholder=\"Select (or create your own)\"\n      defaultValue={defaultValue}\n      options={contentTypesOptions}\n      styles={customStyles(hasError)}\n      inputId={field.name}\n      {...field}\n      {...props}\n      value={(contentTypesOptions ? contentTypesOptions.find((option) => option.value === field.value) : '') as any}\n      onChange={(option) => {\n        if (option != null) {\n          setFieldValue(field.name, (option as any).value, true);\n        } else {\n          setFieldValue(field.name, '');\n        }\n      }}\n    />\n  );\n};\n\nexport default SelectContentType;\n","import React from 'react';\nimport { Field } from 'formik';\n\nconst SelectExpirationTime = (props: { name: string }) => {\n  const { name } = props;\n\n  return (\n    <Field as=\"select\" component=\"select\" name={name}>\n      <option value=\"never\">Never expire</option>\n      <option value=\"1year\">Expire in 1 year</option>\n      <option value=\"1month\">Expire in 1 month</option>\n      <option value=\"1week\">Expire in 1 week</option>\n      <option value=\"1day\">Expire in 1 day</option>\n    </Field>\n  );\n};\n\nexport default SelectExpirationTime;\n","import { GroupedOptionsType } from 'react-select';\n\nexport interface StatusOption {\n  value: string;\n  label: string;\n  highlight?: boolean;\n}\n\ntype StatusGroupedOptions = GroupedOptionsType<StatusOption>;\n\nexport const defaultValue: StatusOption = { value: '200', label: 'OK', highlight: true };\n\nexport const status: StatusGroupedOptions = [\n  {\n    label: '1xx Informational response',\n    options: [\n      { value: '100', label: 'Continue' },\n      { value: '101', label: 'Switching Protocols' },\n      { value: '102', label: 'Processing' },\n    ],\n  },\n  {\n    label: '2xx Success',\n    options: [\n      { value: '200', label: 'OK', highlight: true },\n      { value: '201', label: 'Created', highlight: true },\n      { value: '202', label: 'Accepted' },\n      { value: '203', label: 'Non-Authoritative Information' },\n      { value: '204', label: 'No Content', highlight: true },\n      { value: '205', label: 'Reset Content' },\n      { value: '206', label: 'Partial Content' },\n      { value: '207', label: 'Multi-Status' },\n      { value: '208', label: 'Already Reported' },\n      { value: '226', label: 'IM Used' },\n    ],\n  },\n  {\n    label: '3xx Redirection',\n    options: [\n      { value: '300', label: 'Multiple Choices' },\n      { value: '301', label: 'Moved Permanently' },\n      { value: '302', label: 'Found' },\n      { value: '303', label: 'See Other' },\n      { value: '304', label: 'Not Modified' },\n      { value: '305', label: 'Use Proxy' },\n      { value: '306', label: 'Switch Proxy' },\n      { value: '307', label: 'Temporary Redirect' },\n      { value: '308', label: 'Permanent Redirect' },\n    ],\n  },\n  {\n    label: '4xx Client errors',\n    options: [\n      { value: '400', label: 'Bad Request', highlight: true },\n      { value: '401', label: 'Unauthorized', highlight: true },\n      { value: '402', label: 'Payment Required', highlight: true },\n      { value: '403', label: 'Forbidden', highlight: true },\n      { value: '404', label: 'Not Found', highlight: true },\n      { value: '405', label: 'Method Not Allowed' },\n      { value: '406', label: 'Not Acceptable' },\n      { value: '407', label: 'Proxy Authentication Required' },\n      { value: '408', label: 'Request Timeout' },\n      { value: '409', label: 'Conflict' },\n      { value: '410', label: 'Gone' },\n      { value: '411', label: 'Length Required' },\n      { value: '412', label: 'Precondition Failed' },\n      { value: '413', label: 'Request Entity Too Large' },\n      { value: '414', label: 'Request-URI Too Long' },\n      { value: '415', label: 'Unsupported Media Type' },\n      { value: '416', label: 'Requested Range Not Satisfiable' },\n      { value: '417', label: 'Expectation Failed' },\n      { value: '418', label: 'Im a teapot' },\n      { value: '420', label: 'Enhance Your Calm' },\n      { value: '422', label: 'Unprocessable Entity', highlight: true },\n      { value: '423', label: 'Locked' },\n      { value: '424', label: 'Failed Dependency' },\n      { value: '425', label: 'Unordered Collection' },\n      { value: '426', label: 'Upgrade Required' },\n      { value: '428', label: 'Precondition Required' },\n      { value: '429', label: 'Too Many Requests' },\n      { value: '431', label: 'Request Header Fields Too Large' },\n      { value: '444', label: 'No Response' },\n      { value: '449', label: 'Retry With' },\n      { value: '450', label: 'Blocked by Windows Parental Controls' },\n      { value: '499', label: 'Client Closed Request' },\n    ],\n  },\n  {\n    label: '5xx Server errors',\n    options: [\n      { value: '500', label: 'Internal Server Error', highlight: true },\n      { value: '501', label: 'Not Implemented' },\n      { value: '502', label: 'Bad Gateway' },\n      { value: '503', label: 'Service Unavailable', highlight: true },\n      { value: '504', label: 'Gateway Timeout' },\n      { value: '505', label: 'HTTP Version Not Supported' },\n      { value: '506', label: 'Variant Also Negotiates' },\n      { value: '507', label: 'Insufficient Storage' },\n      { value: '509', label: 'Bandwidth Limit Exceeded' },\n      { value: '510', label: 'Not Extended' },\n    ],\n  },\n];\n","import './styles.css';\n\nimport { FieldProps } from 'formik';\nimport React from 'react';\nimport Select, { GroupType } from 'react-select';\n\nimport { defaultValue, status, StatusOption } from './models';\n\nconst formatGroupLabel = (data: GroupType<StatusOption>) => (\n  <div className=\"select--dark\">\n    <span className=\"text-dark\">{data.label}</span>\n  </div>\n);\n\nconst formatOptionLabel = (data: StatusOption) => {\n  const highlightClass = data.highlight!! ? 'type--bold' : '';\n  return (\n    <span className={highlightClass}>\n      <span className=\"color--primary\">{data.value}</span> - {data.label}\n    </span>\n  );\n};\n\nconst customStyles = (hasError: boolean) => ({\n  input: () => {\n    return { height: 'fit-content' };\n  },\n  control: (styles: any) => {\n    return {\n      ...styles,\n      borderColor: hasError ? '#dc3545' : styles.borderColor,\n      '&:hover': {\n        borderColor: hasError ? '#dc3545' : styles.borderColor,\n      },\n    };\n  },\n});\n\nconst SelectHttpStatusCode = ({\n  field,\n  form: { touched, errors, setFieldValue },\n  ...props\n}: FieldProps & { isError: Boolean }) => {\n  let hasError = !!errors[field.name] && !!touched[field.name];\n\n  return (\n    <Select\n      options={status}\n      defaultValue={defaultValue}\n      formatGroupLabel={formatGroupLabel}\n      formatOptionLabel={formatOptionLabel}\n      styles={customStyles(hasError)}\n      inputId={field.name}\n      {...field}\n      {...props}\n      value={(status ? status.find((option) => option.value === field.value) : '') as any}\n      onChange={(option) => setFieldValue(field.name, (option as any).value)}\n    />\n  );\n};\n\nexport default SelectHttpStatusCode;\n","import React from 'react';\nimport { FieldProps } from 'formik';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst placeholder = JSON.stringify(\n  {\n    identity: {\n      id: 'b06cd03f-75d0-413a-b94b-35e155444d70',\n      login: 'John Doe',\n    },\n    permissions: { roles: ['moderator'] },\n  },\n  null,\n  2\n);\n\nconst TextareaCodeEditor = ({ field, form, ...props }: FieldProps & { label: string }) => {\n  return (\n    <TextareaAutosize\n      minRows={12}\n      maxRows={20}\n      placeholder={placeholder}\n      className=\"textarea--code\"\n      {...field}\n      {...props}\n    />\n  );\n};\n\nexport default TextareaCodeEditor;\n","import React from 'react';\nimport { FieldProps } from 'formik';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst placeholder = JSON.stringify({ 'X-Foo-Bar': 'Hello World' }, null, 2);\n\nconst TextareaHeaders = ({ field, form: { touched, errors }, ...props }: FieldProps & { label: string }) => {\n  let classNameError = !!errors[field.name] && !!touched[field.name] ? 'input--error' : '';\n\n  return (\n    <TextareaAutosize\n      minRows={4}\n      maxRows={6}\n      placeholder={placeholder}\n      className={`textarea--code ${classNameError}`}\n      {...field}\n      {...props}\n    />\n  );\n};\n\nexport default TextareaHeaders;\n","import { useFormikContext } from 'formik';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { clearNew } from '../../../redux/mocks/slice';\n\nconst CleanConfirmationOnSubmit = () => {\n  const dispatch = useDispatch();\n\n  const { isValidating } = useFormikContext();\n\n  // Clean the confirmation message when the form is re-submited\n  useEffect(() => {\n    if (isValidating) {\n      dispatch(clearNew());\n    }\n  }, [isValidating, dispatch]);\n\n  return null;\n};\n\nexport default CleanConfirmationOnSubmit;\n","import './styles.css';\n\nimport { ErrorMessage, FastField, Form, FormikProps } from 'formik';\nimport React from 'react';\n\nimport SelectCharset from '../../../components/SelectCharset/SelectCharset';\nimport SelectContentType from '../../../components/SelectContentType/SelectContentType';\nimport SelectExpirationTime from '../../../components/SelectExpirationTime/SelectExpirationTime';\nimport SelectHttpStatusCode from '../../../components/SelectHttpStatusCode/SelectHttpStatusCode';\nimport TextareaCodeEditor from '../../../components/TextareaCodeEditor/TextareaCodeEditor';\nimport TextareaHeaders from '../../../components/TextareaHeaders/TextareaHeaders';\nimport CleanConfirmationOnSubmit from './CleanConfirmationOnSubmit';\nimport { NewMockFormValues } from './types';\n\nconst NewMockFormView = (props: FormikProps<NewMockFormValues>) => {\n  const { touched, errors, isSubmitting, submitCount, isValid } = props;\n\n  return (\n    <section className=\"space--xxs bg--secondary\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center no-gutters\">\n          <div className=\"col-md-10 col-lg-8\">\n            <div className=\"boxed boxed--border\">\n              <Form className=\"text-left mx-0\">\n                <CleanConfirmationOnSubmit />\n\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <Label>HTTP Status</Label>\n                    <RequiredTag />\n                    <FastField type=\"text\" name=\"status\" component={SelectHttpStatusCode} />\n                    <ErrorFeedback name=\"status\" />\n                    <Help>The HTTP Code of the HTTP response you'll receive.</Help>\n                  </div>\n                </div>\n\n                <div className=\"row mt-3\">\n                  <div className=\"col-md-6\">\n                    <Label>Response Content Type</Label>\n                    <RequiredTag />\n\n                    <FastField type=\"text\" name=\"contentType\" component={SelectContentType} />\n                    <ErrorFeedback name=\"contentType\" />\n                    <Help>The Content-Type header that will be sent with the response.</Help>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <Label>Charset</Label>\n                    <RequiredTag />\n\n                    <FastField type=\"text\" name=\"charset\" component={SelectCharset} />\n                    <ErrorFeedback name=\"charset\" />\n                    <Help>The Charset used to encode/decode your payload.</Help>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <Label>HTTP Headers</Label>\n                    <OptionalTag />\n\n                    <FastField type=\"text\" name=\"headers\" component={TextareaHeaders} />\n                    <ErrorFeedback name=\"headers\" />\n                    <Help>Customize the HTTP headers sent in the response. Define the headers as a JSON object.</Help>\n                  </div>\n                </div>\n                <div className=\"row mt-3\">\n                  <div className=\"col-md-12\">\n                    <Label>HTTP Response Body</Label>\n                    <OptionalTag />\n\n                    <FastField type=\"text\" name=\"body\" component={TextareaCodeEditor} />\n                    <ErrorFeedback name=\"body\" />\n                  </div>\n                </div>\n                <hr className=\"mt-4\"></hr>\n                <h5 className=\"mb-2\">\n                  Options to manage your mock after its creation\n                  <OptionalTag />\n                </h5>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <Label>Secret token</Label>\n\n                    <FastField\n                      type=\"text\"\n                      name=\"secret\"\n                      className={`form-control ${!!errors.secret && !!touched.secret ? 'input--error' : ''}`}\n                    />\n                    <ErrorFeedback name=\"secret\" />\n                    <Help>\n                      Required to update/delete your mock.\n                      <br />\n                      If blank, a random secret will be generated.\n                    </Help>\n                  </div>\n\n                  <div className=\"col-md-6 mb-5\">\n                    <Label>Mock identifier</Label>\n                    <FastField\n                      type=\"string\"\n                      name=\"name\"\n                      className={`form-control ${!!errors.name && !!touched.name ? 'input--error' : ''}`}\n                    />\n                    <ErrorFeedback name=\"name\" />\n                    <Help>\n                      Just a name to identify this mock in your management console later.\n                      <br />\n                      &nbsp;\n                    </Help>\n                  </div>\n                </div>\n                {submitCount > 0 && !isValid && (\n                  <div className=\"alert bg--error\">\n                    <div className=\"alert__body\">\n                      <span>Please fix the errors before saving your mock!</span>\n                    </div>\n                  </div>\n                )}\n                <div className=\"row\">\n                  <div className=\"col-md-8 \">\n                    <button type=\"submit\" className=\"btn btn--primary type--uppercase\" disabled={isSubmitting}>\n                      Generate my HTTP Response\n                    </button>\n                  </div>\n                  <div className=\"col-md-4 \">\n                    <div className=\"expiration-select input-select\">\n                      <SelectExpirationTime name=\"expiration\" />\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst RequiredTag = () => (\n  <>\n    &nbsp;<span className=\"badge badge-info float-right\">REQUIRED</span>\n  </>\n);\n\nconst OptionalTag = () => (\n  <>\n    &nbsp;<span className=\"badge badge-dark type--fade float-right\">OPTIONAL</span>\n  </>\n);\n\nconst Label = (props: React.PropsWithChildren<any>) => <span className=\"color--dark\">{props.children}</span>;\n\nconst ErrorFeedback = (props: { name: string }) => (\n  <ErrorMessage component=\"span\" className=\"form-text color--error\" name={props.name} />\n);\n\nconst Help = (props: React.PropsWithChildren<any>) => (\n  <small className=\"form-text color--primary\">{props.children}</small>\n);\n\nexport default NewMockFormView;\n","import { withFormik } from 'formik';\nimport { connect } from 'react-redux';\n\nimport { store } from '../../../redux/mocks/slice';\nimport MockyAPI from '../../../services/MockyAPI/MockyAPI';\nimport { initialState, newMockValidationSchema } from './models';\nimport NewMockFormView from './NewMockFormView';\nimport { NewMockFormProps, NewMockFormValues } from './types';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport GA from '../../../services/Analytics/GA';\n\nconst mapDispatchToProps = { store };\n\nconst form = withFormik<NewMockFormProps & typeof mapDispatchToProps & RouteComponentProps, NewMockFormValues>({\n  validationSchema: newMockValidationSchema,\n  validateOnBlur: true,\n  validateOnChange: false,\n  mapPropsToValues: (initialProps) => initialState,\n  handleSubmit: async (values, { props }) => {\n    const result = await MockyAPI.create(values);\n    if (result !== undefined) {\n      GA.event('mock', 'create');\n      props.store(result);\n      props.history.push('/design/confirmation');\n    }\n  },\n})(NewMockFormView);\n\nconst NewMockForm = withRouter(connect(null, mapDispatchToProps)(form));\n\nexport default NewMockForm;\n","import React from 'react';\n\nimport DesignerTitle from './components/DesignerTitle';\nimport NewMockFeatures from './components/NewMockFeatures';\nimport NewMockForm from './form/NewMockForm';\n\nexport default () => {\n  return (\n    <>\n      <DesignerTitle />\n\n      <NewMockForm />\n\n      <NewMockFeatures />\n    </>\n  );\n};\n","import React from 'react';\n\nexport default () => (\n  <>\n    <section className=\"text-center  space--xs\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-10 col-lg-8\">\n            <h2>FAQ</h2>\n            <p className=\"lead\">\n              What you always wanted to know about <code>Mocky</code>\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div className=\"text-block\">\n              <h4>General</h4>\n            </div>\n          </div>\n          <div className=\"col-lg-5\">\n            <div className=\"text-block\">\n              <h5>What is Mocky?</h5>\n              <p>\n                Mocky is a simple app which allows to generate custom HTTP responses. It's helpful when you have to\n                request a build-in-progress WS, when you want to mock the backend response in a singleapp, or when you\n                want to test your WS client.\n              </p>\n            </div>\n            <div className=\"text-block\">\n              <h5>Is it really free?</h5>\n              <p>\n                Yes, mocky is really and totally free for you (but not for me{' '}\n                <span role=\"img\" aria-label=\"up side down\">\n                  🙃\n                </span>{' '}\n                ). If you feel like it, I accept{' '}\n                <a href=\"https://www.buymeacoffee.com/julienlafont\" target=\"_blank\" rel=\"noreferrer noopener\">\n                  donations\n                </a>{' '}\n                to help me finance the service!\n              </p>\n            </div>\n          </div>\n          <div className=\"col-lg-5\">\n            <div className=\"text-block\">\n              <h5>How many mocks can I store? How long do they last?</h5>\n              <p>\n                You can create as many mocks as you want, and they will last forever. There is just one rule: call it at\n                least once every year to keep it alive!\n              </p>\n            </div>\n            <div className=\"text-block\">\n              <h5>What is mocky SLA?</h5>\n              <p>\n                <code>Mocky do NOT commit for any Service-level agreement</code>. Everything is done to provide the best\n                service quality, but I don't guarantee the longevity or the stability of the application. If you need\n                guarantees, you have to host your own Mocky instance.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div className=\"text-block\">\n              <h4>Privacy</h4>\n            </div>\n          </div>\n          <div className=\"col-lg-5\">\n            <div className=\"text-block\">\n              <h5>Will my mock be private?</h5>\n              <p>Your mock is only accessible from its unique and private URL. Keep it secret!</p>\n            </div>\n            <div className=\"text-block\">\n              <h5>Is it allowed to store Personal Information?</h5>\n              <p>\n                <code>Absolutely NO!</code> This website is hosted in Europe, where the GDPR regulate the processing of\n                Personal Identifiable Information. It's strictly forbidden to store PII without the right declarations.\n              </p>\n            </div>\n          </div>\n          <div className=\"col-lg-5\">\n            <div className=\"text-block\">\n              <h5>Are my data encrypted at rest?</h5>\n              <p>\n                <code>No.</code> Mocky administrators have access to all mocks and have the right to delete any mock\n                without warning or restriction.\n              </p>\n            </div>\n            <div className=\"text-block\">\n              <h5>Could you delete a mock for me please?</h5>\n              <p>\n                <i>I don't guarantee to process your request, but send me a direct message on twitter.</i>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default () => (\n  <section className=\"imagebg space--xxs\" data-gradient-bg=\"#4876BD,#5448BD,#8F48BD,#BD48B1\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"cta cta-1 cta--horizontal boxed boxed--border text-center-xs\">\n            <div className=\"row justify-content-center p-5\">\n              <div className=\"col-lg-3\">\n                <h4>No signup</h4>\n              </div>\n              <div className=\"col-lg-4\">\n                <p className=\"lead\">\n                  Start designing your mock\n                  <br />\n                </p>\n              </div>\n              <div className=\"col-lg-4 text-center\">\n                <NavLink to=\"/design\" className=\"btn btn--primary type--uppercase\">\n                  <span className=\"btn__text\">NEW MOCK</span>\n                </NavLink>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default () => (\n  <section className=\"space--xs\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 col-lg-3\">\n          <div className=\"feature feature-6\">\n            <i className=\"icon color--primary icon-Money-2 icon--sm\"></i>\n            <h5>Free &amp; Unlimited</h5>\n            <p>\n              Mocky is free to use, no ads, no hidden subscriptions or service limits. Your mocks will be available{' '}\n              <strong>forever</strong> if you call it at least on time per year, but without any{' '}\n              <NavLink to=\"/faq\">guarantee</NavLink>.\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-3\">\n          <div className=\"feature feature-6\">\n            <i className=\"icon color--primary icon-Box-Full icon--sm\"></i>\n            <h5>Total control</h5>\n            <p>\n              New in Mocky, you can now update or delete your mocks at any time.\n              <br />\n              The next release will go further and offer you request inspector and cloud-based mock management.\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-3\">\n          <div className=\"feature feature-6\">\n            <i className=\"icon color--primary icon-Chemical icon--sm\"></i>\n            <h5>Developer Friendly</h5>\n            <p>\n              Mocky is compatible with JS, Mobile and Server applications, featuring CORS, JSONP and GZIP responses.\n              <br />\n              No authentication, just call it!\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-3\">\n          <div className=\"feature feature-6\">\n            <i className=\"icon color--primary icon-Code-Window icon--sm\"></i>\n            <h5>Open Source&nbsp;</h5>\n            <p>\n              Mocky is distributed with Apache 2 licence on{' '}\n              <a href=\"https://github.com/julien-lafont/Mocky\" rel=\"noreferrer noopener\" target=\"_blank\">\n                Github\n              </a>\n              . Community contributions are welcome! Ready-to-use distributions will be available to host your own Mocky\n              instance.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import React from 'react';\nimport Typed from 'react-typed';\n\nexport default () => (\n  <section className=\"text-center space--xxs\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-10 col-lg-8\">\n          <h1>Mocky</h1>\n          <p className=\"lead\">\n            <Typed strings={['The world easiest &amp; fastest tool belts to mock your APIs']} typeSpeed={40} />\n          </p>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport code from './assets/carbon.svg';\n\nexport default () => (\n  <section className=\"switchable feature-large space--xxs\">\n    <div className=\"container\">\n      <div className=\"row justify-content-around\">\n        <div className=\"col-md-6\">\n          <img alt=\"curl -X PUT https://www.mocky.io/v2/5185415ba171ea3a00704eed\" src={code} />\n        </div>\n        <div className=\"col-md-6 col-lg-5\">\n          <div className=\"switchable__text\">\n            <h2>API Mocks for Free</h2>\n            <p className=\"lead\">\n              Don't wait for the backend to be ready, generate custom API responses with Mocky and start working on your\n              application straightaway\n            </p>\n            <NavLink to=\"/design\">Start designing your mock »</NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import React from 'react';\n\nimport CallToActionDesignMock from './components/CallToActionDesignMock';\nimport Features from './components/Features';\nimport HeadTitle from './components/HeadTitle';\nimport WhatIsMocky from './components/WhatIsMocky';\n\nconst Home = () => (\n  <>\n    <HeadTitle />\n    <WhatIsMocky />\n    <CallToActionDesignMock />\n    <Features />\n  </>\n);\nexport default Home;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default () => (\n  <section className=\"height-100 text-center\">\n    <div className=\"container pos-vertical-center\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <h1 className=\"h1--large\">404</h1>\n          <p className=\"lead\">The page you were looking for was not found.</p>\n          <NavLink to=\"/\">Go back to home page</NavLink>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import React from 'react';\n\nimport coffee from '../assets/clem-onojeghuo-DoA2duXyzRM-unsplash.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter as iconTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faBeer as iconCoffee } from '@fortawesome/free-solid-svg-icons';\n\nexport default () => (\n  <section className=\"feature-large space--xxs bg--secondary\">\n    <div className=\"container\">\n      <div className=\"row justify-content-between\">\n        <div className=\"col-lg-5 col-md-5\">\n          <img alt=\"woman\" className=\"border--round box-shadow-wide\" src={coffee} />\n        </div>\n        <div className=\"col-lg-6 col-md-5\">\n          <h2 style={{ marginTop: '0.6em' }}>How to support Mocky?</h2>\n          <div className=\"text-block\">\n            <h5>Talk about us</h5>\n            <p>\n              Give a shoot on twitter! Share how Mocky helps you in your daily life, how it improves your productivity.\n            </p>\n\n            <h5>Donate to cover operating costs</h5>\n            <p>\n              Mocky is a free and open-source service, but not a costless service. All contributions to cover operating\n              costs are welcome.\n            </p>\n          </div>\n        </div>\n        <div className=\"col-lg-1 col-md-2\">\n          <div className=\"text-block\">\n            <p>&nbsp;</p>\n            <br />\n            <p>\n              <a\n                className=\"btn btn--primary btn-cta-pub\"\n                href=\"https://twitter.com/intent/tweet?original_referer=https%3A%2F%2Fpublish.twitter.com%2F&ref_src=twsrc%5Etfw&text=Don%27t%20wait%20for%20the%20backend%20to%20be%20ready%2C%20generate%20custom%20API%20responses%20with%20Mocky%20and%20start%20working%20on%20your%20application%20straightaway&tw_p=tweetbutton&url=https%3A%2F%2Fwww.mocky.io&via=julien_lafont\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <span className=\"btn__text\">\n                  <FontAwesomeIcon icon={iconTwitter} size=\"2x\" />\n                  &nbsp; Give a shout\n                </span>\n              </a>\n            </p>\n            <br />\n            <br />\n            <p>\n              <a\n                className=\"btn btn--primary btn-cta-pub\"\n                href=\"https://www.buymeacoffee.com/julienlafont\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <span className=\"btn__text\">\n                  <FontAwesomeIcon icon={iconCoffee} size=\"2x\" />\n                  &nbsp; Buy me a beer\n                </span>\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import './styles.css';\n\nimport React, { useState } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { faCopy as iconCopy } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { selectLatestMock, selectCountMocks } from '../../redux/mocks/slice';\nimport DesignerTitle from './components/DesignerTitle';\nimport NewMockFeatures from './components/NewMockFeatures';\nimport Pub from './components/Pub';\n\nconst NewMockConfirmation = () => {\n  const [copied, setCopied] = useState(0);\n  const mock = useSelector(selectLatestMock);\n  const nbMocks = useSelector(selectCountMocks);\n\n  const isPromotingActivated = process.env.REACT_APP_SHOW_PROMOTING_PANEL === 'true';\n\n  if (!mock) {\n    return <Redirect to=\"/design\" />;\n  }\n\n  return (\n    <>\n      <DesignerTitle />\n\n      {isPromotingActivated && (nbMocks === 2 || nbMocks % 4 === 0) && <Pub />}\n\n      <section className=\"space--xxs bg--primary\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center no-gutters\">\n            <div className=\"col-md-10 col-lg-8 text-center\">\n              <h3>{copied > 0 ? \"Link copied, You're now ready!\" : 'Your mock is ready!'}</h3>\n\n              <div>\n                <h4 className=\"mb-2\">\n                  Mock URL\n                  <CopyToClipboard text={mock.link} onCopy={() => setCopied(1)}>\n                    <FontAwesomeIcon icon={iconCopy} className=\"iconMocky--main\" />\n                  </CopyToClipboard>\n                </h4>\n\n                <pre className=\"user-select-all\">\n                  <a href={mock.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {mock.link}\n                  </a>\n                </pre>\n              </div>\n\n              <span className=\"type--fade\" data-tooltip=\"This link allow you to delete your mock whenever you want\">\n                Secret delete link\n                <CopyToClipboard text={mock.deleteLink}>\n                  <FontAwesomeIcon icon={iconCopy} className=\"iconMocky--sec\" />\n                </CopyToClipboard>\n              </span>\n\n              <pre className=\"unpad unmarg--bottom type--fade user-select-all\">\n                <small>{mock.deleteLink}</small>\n              </pre>\n            </div>\n          </div>\n        </div>\n      </section>\n      <NewMockFeatures />\n    </>\n  );\n};\n\nexport default NewMockConfirmation;\n","import React from 'react';\n\nexport default () => (\n  <section className=\"text-center space--xxs\">\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-10 col-lg-8\">\n          <h2>Manage your mocks</h2>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default () => (\n  <>\n    <p className=\"lead\">\n      This mock is gone{' '}\n      <span role=\"img\" aria-label=\"sad\">\n        🥺\n      </span>\n    </p>\n\n    <NavLink to=\"/manage\" className=\"btn btn--primary type--uppercase\" href=\"/manage\">\n      <span className=\"btn__text\">Go back</span>\n    </NavLink>\n  </>\n);\n","import React from 'react';\n\nimport ManagerTitle from '../components/ManagerTitle';\nimport MockGone from '../components/MockGone';\n\nexport default () => {\n  return (\n    <>\n      <ManagerTitle />\n\n      <section className=\"text-center space--xxs\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n              <div className=\"boxed boxed--border bg--primary boxed--lg box-shadow\">\n                <h3>Mock Deletion</h3>\n                <MockGone />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n","import React from 'react';\nimport Moment from 'react-moment';\n\nimport { MockStored } from '../../../redux/mocks/types';\n\nexport default ({ id, secret, mock }: { id: string; secret: string; mock?: MockStored }) => (\n  <pre>\n    ID: {id}\n    <br />\n    SECRET: {secret}\n    <br />\n    {mock && (\n      <>\n        <br />\n        NAME: {mock.name ?? 'Unamed mock'}\n        <br />\n        CREATION DATE: <Moment format=\"YYYY-MM-DD HH:MM\" withTitle date={mock.createdAt} />\n      </>\n    )}\n  </pre>\n);\n","import React from 'react';\n\nimport { default as Loading } from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default () => <Loading type=\"ThreeDots\" color=\"#FFF\" width={50} height={30} />;\n","import '../styles.css';\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useAsync } from 'react-use';\n\nimport { remove, selectMockById } from '../../../redux/mocks/slice';\nimport MockyAPI from '../../../services/MockyAPI/MockyAPI';\nimport DeleteMockInformation from '../components/DeleteMockInformation';\nimport ManagerTitle from '../components/ManagerTitle';\nimport MockGone from '../components/MockGone';\nimport SearchingMockLoader from '../components/SearchingMockLoader';\nimport { DeleteMockParams } from '../types';\nimport GA from '../../../services/Analytics/GA';\n\nconst DeletionApproval = () => {\n  const { id, secret }: DeleteMockParams = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [deleting, setDeleting] = useState(false);\n  const [deleted, setDeleted] = useState(false);\n\n  // Check if the mock exist in the store\n  const mock = useSelector(selectMockById(id, secret));\n\n  const state = useAsync(async () => {\n    return MockyAPI.check({ id, secret });\n  }, [id, secret]);\n\n  const triggerDelete = async () => {\n    setDeleting(true);\n\n    // Delete from the store\n    dispatch(remove(id));\n\n    GA.event('mock', 'delete');\n\n    // Try delete from the API\n    const result = await MockyAPI.delete({ id, secret });\n\n    // Mock deleted by the API -> confirmation\n    if (result) {\n      dispatch(remove(id));\n      setDeleted(true);\n    } else {\n      history.push('/manage/delete/done');\n    }\n  };\n\n  return (\n    <>\n      <ManagerTitle />\n\n      <section className=\"text-center space--xxs\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n              <div className=\"boxed boxed--border bg--primary boxed--lg box-shadow\">\n                <h3>Mock Deletion</h3>\n\n                {(deleted && <MockGone />) ||\n                  (state.loading ? (\n                    <SearchingMockLoader />\n                  ) : state.error ? (\n                    <p>Something got wrong...</p>\n                  ) : state.value ? (\n                    <>\n                      <p className=\"lead\">You're about to definitively delete the following mock, are you sure?</p>\n                      <DeleteMockInformation id={id} secret={secret} mock={mock} />\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn--primary btn--confirmation\"\n                        onClick={triggerDelete}\n                        disabled={deleting}\n                      >\n                        DELETE NOW\n                      </button>\n                    </>\n                  ) : (\n                    <p className=\"lead\">This mock don't exist (anymore).</p>\n                  ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default DeletionApproval;\n","import React from 'react';\nimport background from './assets/sand-bg.jpg';\nimport { Link } from 'react-router-dom';\n\nexport default () => (\n  <section className=\"cover height-60 imagebg text-center\" data-overlay=\"3\">\n    <div\n      className=\"background-image-holder\"\n      style={{\n        background: `url(${background})`,\n        opacity: 1,\n      }}\n    >\n      <img alt=\"background\" src={background} />\n    </div>\n    <div className=\"container pos-vertical-center\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <h1>Your mocky repository is empty...</h1>\n          <Link className=\"btn btn--primary type--uppercase\" to=\"/design\">\n            <span className=\"btn__text\">Create your first mock!</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import React from 'react';\nimport Moment from 'react-moment';\nimport wrap from 'word-wrap';\n\nimport {\n  faEdit as iconEdit,\n  faExternalLinkAlt as iconOpen,\n  faTrash as iconDelete,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { MockStored } from '../../../redux/mocks/types';\nimport { NavLink } from 'react-router-dom';\n\nconst ManagerTable = (props: { mocks: MockStored[] }) => (\n  <section className=\"text-center space--xxs\">\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-12\">\n          <table className=\"table border--round table--alternate-row table-sm\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th style={{ width: '35%' }}>Name</th>\n                <th style={{ width: '45 %' }}>Description</th>\n                <th style={{ width: '15%' }}>Date</th>\n                <th style={{ width: '10%' }}>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.mocks.map((mock) => {\n                const name = (mock.name && <span>{wrap(mock.name, { width: 30, cut: true })}</span>) || (\n                  <span>{mock.id}</span>\n                );\n\n                const resume = (\n                  <>\n                    <span className=\"badge badge-dark\">{mock.status}</span>&nbsp;\n                    <span className=\"badge badge-info\">{mock.contentType}</span>&nbsp;\n                    <span className=\"badge badge-warning\">{mock.charset}</span>\n                    {(mock.content && (\n                      <pre className=\"resume\">\n                        {/**/}\n                        {(mock.content ?? '').substr(0, 2000).trim()}\n                      </pre>\n                    )) || (\n                      <>\n                        <br />\n                        <span className=\"badge badge-light\">NO CONTENT</span>\n                      </>\n                    )}\n                  </>\n                );\n\n                const createdAt = (\n                  <span>\n                    Created on\n                    <br />\n                    <Moment format=\"YYYY-MM-DD HH:MM\" withTitle date={mock.createdAt} />\n                  </span>\n                );\n\n                const expireAt = mock.expireAt && (\n                  <>\n                    <hr />\n                    <span>\n                      Expire <Moment withTitle to={mock.expireAt} />\n                    </span>\n                  </>\n                );\n\n                const openLink = (\n                  <a href={mock.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FontAwesomeIcon icon={iconOpen} />\n                  </a>\n                );\n\n                const deleteLink = (\n                  <NavLink to={`/manage/delete/${mock.id}/${mock.secret}`} className=\"icon-delete\">\n                    <FontAwesomeIcon icon={iconDelete} />\n                  </NavLink>\n                );\n\n                const editLink = (\n                  <span className=\"icon-edit\" data-tooltip=\"SOON!\">\n                    <FontAwesomeIcon icon={iconEdit} />\n                  </span>\n                );\n\n                return (\n                  <tr key={mock.id}>\n                    <td>{name}</td>\n                    <td>{resume}</td>\n                    <td>\n                      {createdAt}\n                      {expireAt}\n                    </td>\n                    <td>\n                      {openLink}&nbsp;&nbsp;&nbsp;\n                      {editLink}&nbsp;&nbsp;&nbsp;\n                      {deleteLink}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n\n          <div className=\"alert bg--primary\">\n            <div className=\"alert__body\">\n              <strong>Warning</strong>: These data are stored on your computer. It will be lost if you clean your\n              browser cache (local-storage).\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nexport default ManagerTable;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectAllMocks } from '../../redux/mocks/slice';\nimport EmptyPlaceholder from './table/EmptyPlaceholder';\nimport ManagerTable from './table/ManagerTable';\nimport ManagerTitle from './components/ManagerTitle';\nimport './styles.css';\n\nconst Manager = () => {\n  const mocks = useSelector(selectAllMocks);\n  const isEmpty = mocks.length === 0;\n\n  return (\n    <>\n      <ManagerTitle />\n\n      {isEmpty && <EmptyPlaceholder />}\n\n      {!isEmpty && <ManagerTable mocks={mocks} />}\n    </>\n  );\n};\n\nexport default Manager;\n","import React from 'react';\n\nimport './styles.css';\n\nexport default () => (\n  <>\n    <section className=\"text-center space--xs\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-10 col-lg-8\">\n            <h2>Cookie Policy</h2>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section>\n      <div className=\"container policy\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <div className=\"text-block\">\n              <p>This is the Cookie Policy for Mocky, accessible from https://www.mocky.io</p>\n\n              <p>\n                <strong>What Are Cookies</strong>\n              </p>\n\n              <p>\n                As is common practice with almost all professional websites this site uses cookies, which are tiny files\n                that are downloaded to your computer, to improve your experience. This page describes what information\n                they gather, how we use it and why we sometimes need to store these cookies. We will also share how you\n                can prevent these cookies from being stored however this may downgrade or 'break' certain elements of\n                the sites functionality.\n              </p>\n\n              <p>\n                For more general information on cookies, please read{' '}\n                <a href=\"https://www.cookieconsent.com/what-are-cookies/\">\"What Are Cookies\"</a>.\n              </p>\n\n              <p>\n                <strong>How We Use Cookies</strong>\n              </p>\n\n              <p>\n                We use cookies for a variety of reasons detailed below. Unfortunately in most cases there are no\n                industry standard options for disabling cookies without completely disabling the functionality and\n                features they add to this site. It is recommended that you leave on all cookies if you are not sure\n                whether you need them or not in case they are used to provide a service that you use.\n              </p>\n\n              <p>\n                <strong>Disabling Cookies</strong>\n              </p>\n\n              <p>\n                You can prevent the setting of cookies by adjusting the settings on your browser (see your browser Help\n                for how to do this). Be aware that disabling cookies will affect the functionality of this and many\n                other websites that you visit. Disabling cookies will usually result in also disabling certain\n                functionality and features of the this site. Therefore it is recommended that you do not disable\n                cookies.\n              </p>\n\n              <p>\n                <strong>The Cookies We Set</strong>\n              </p>\n\n              <ul className=\"bullets\">\n                <li>\n                  <strong>Site preferences cookies</strong>\n                  <p>\n                    In order to provide you with a great experience on this site we provide the functionality to set\n                    your preferences for how this site runs when you use it. In order to remember your preferences we\n                    need to set cookies so that this information can be called whenever you interact with a page is\n                    affected by your preferences.\n                  </p>\n                </li>\n              </ul>\n\n              <p>\n                <strong>Third Party Cookies</strong>\n              </p>\n\n              <p>\n                In some special cases we also use cookies provided by trusted third parties. The following section\n                details which third party cookies you might encounter through this site.\n              </p>\n\n              <ul className=\"bullets\">\n                <li>\n                  <strong>Google Analytics</strong>\n                  <p>\n                    This site uses Google Analytics which is one of the most widespread and trusted analytics solution\n                    on the web for helping us to understand how you use the site and ways that we can improve your\n                    experience. These cookies may track things such as how long you spend on the site and the pages that\n                    you visit so we can continue to produce engaging content.\n                  </p>\n                  <p>For more information on Google Analytics cookies, see the official Google Analytics page.</p>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default () => (\n  <footer className=\"text-center-xs space--xs\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ul className=\"list-inline\">\n            <li>\n              <NavLink to=\"/about\">\n                <span className=\"h6 type--uppercase\">\n                  <p>About</p>\n                </span>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/faq\">\n                <span className=\"h6 type--uppercase\">\n                  <p>FAQ</p>\n                </span>\n              </NavLink>\n            </li>\n            <li>\n              <a href=\"https://www.buymeacoffee.com/julienlafont\">\n                <span className=\"h6 type--uppercase\">\n                  <p>You like it? Buy me a coffee!</p>\n                </span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-sm-6 text-right text-center-xs\">\n          <ul className=\"social-list list-inline list--hover\">\n            <li>\n              <a href=\"https://github.com/julien-lafont/Mocky\" rel=\"noopener noreferrer\" target=\"_blank\">\n                Be an <strong>awesome Hacker</strong>, fork me <i className=\"socicon socicon-github icon icon--xs\"></i>\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.twitter.com/julien_lafont\" rel=\"noopener noreferrer\" target=\"_blank\">\n                Made with <strong>love</strong> by @julien_lafont{' '}\n                <i className=\"socicon socicon-twitter icon icon--xs\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-4\">\n          <span className=\"type--fine-print\">\n            © <span className=\"update-year\">2020</span> Mocky.io\n          </span>\n          <NavLink to=\"/faq\" className=\"type--fine-print\">\n            Privacy Policy\n          </NavLink>\n          <NavLink to=\"/policies/cookies\" className=\"type--fine-print\">\n            Cookie Policy\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  </footer>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport logo from './assets/logo-dark.png';\n\nexport default () => (\n  <div className=\"nav-container\">\n    <div>\n      <nav className=\"bar bar-1\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-1 hidden-xs col-md-3\">\n              <div className=\"bar__module\">\n                <a href=\"/\" className=\"logo-link\">\n                  <img className=\"logo\" alt=\"logo\" src={logo} style={{ maxHeight: '30px' }} />\n                </a>\n              </div>\n            </div>\n            <div className=\"col-lg-11 col-md-12 text-right text-left-xs text-left-sm\">\n              <div className=\"bar__module\">\n                <NavLink to=\"/manage\" className=\"btn btn--sm type--uppercase hidden-xs\">\n                  <span className=\"btn__text\">Manage my mocks</span>\n                </NavLink>\n\n                <NavLink to=\"/design\" className=\"btn btn--sm type--uppercase btn--primary\">\n                  <span className=\"btn__text\">New mock</span>\n                </NavLink>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  </div>\n);\n","import React, { Suspense } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport CookieNotification from '../../components/CookieNotification/CookieNotification';\nimport ErrorBoundary from '../../components/ErrorBoundary/ErrorBoundary';\nimport Loader from '../../components/Loader/Loader';\nimport ScrollToTopOnNavigationChange from '../../components/ScrollToTopOnNavigationChange/ScrollToTopOnNavigationChange';\nimport TrackPageView from '../../components/TrackPageView/TrackPageView';\nimport About from '../../modules/about/About';\nimport Designer from '../../modules/designer/Designer';\nimport Faq from '../../modules/faq/Faq';\nimport Home from '../../modules/home/Home';\nimport Page404 from '../../modules/routing/Page404';\nimport NewMockConfirmation from '../designer/NewMockConfirmation';\nimport DeleteSuccessful from '../manager/delete/DeleteSuccessful';\nimport DeletionApproval from '../manager/delete/DeletionApproval';\nimport Manager from '../manager/Manager';\nimport CookiePolicy from '../policies/CookiePolicy';\nimport Footer from '../skeleton/Footer';\nimport NavBar from '../skeleton/NavBar';\nimport Maintenance from '../maintenance/Maintenance';\n\nconst isMaintenance = process.env.REACT_APP_MAINTENANCE === 'true';\n\nconst Routing = () => (\n  <BrowserRouter>\n    <ScrollToTopOnNavigationChange />\n    <TrackPageView />\n\n    {isMaintenance && <Maintenance />}\n\n    {!isMaintenance && (\n      <>\n        <NavBar />\n        <div className=\"main-container\">\n          <ErrorBoundary>\n            <Suspense fallback={<Loader />}>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/design/confirmation\" component={NewMockConfirmation} />\n                <Route path=\"/design\" component={Designer} />\n                <Route path=\"/manage/delete/done\" component={DeleteSuccessful} />\n                <Route path=\"/manage/delete/:id/:secret\" component={DeletionApproval} />\n                <Route path=\"/manage\" component={Manager} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/faq\" component={Faq} />\n                <Route path=\"/policies/cookies\" component={CookiePolicy} />\n                <Route path=\"*\" component={Page404} />\n              </Switch>\n            </Suspense>\n            <CookieNotification />\n          </ErrorBoundary>\n          <Footer />\n        </div>\n      </>\n    )}\n  </BrowserRouter>\n);\n\nexport default Routing;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport mocksReducer from './mocks/slice';\n\nimport { save, load } from 'redux-localstorage-simple';\n\nexport const store = configureStore({\n  reducer: {\n    mocks: mocksReducer,\n  },\n  // Store / Load store from local-storage\n  middleware: [save()],\n  preloadedState: load(),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\n\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport Routing from './modules/routing/Routing';\nimport { store } from './redux/store';\nimport * as serviceWorker from './serviceWorker';\nimport GA from './services/Analytics/GA';\n\nGA.initialize();\nconsole.log(process.env);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Routing />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}